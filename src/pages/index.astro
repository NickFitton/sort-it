---
import Layout from "../layouts/Layout.astro";
import { sort } from "../logic/sorting";
---

<Layout>
  <header>
    <div class="title">
      <h1>Sort-it</h1>
      <h4>See it, say it, sorted</h4>
    </div>
  </header>
  <main>
    <div class="io">
      <div class="input">
        <div class="ioHeader">
          <h3>Input</h3>
          <button>Options</button>
        </div>
        <div class="textareaWrapper">
          <textarea id="textInput"></textarea>
        </div>
      </div>
      <div class="output">
        <div class="ioHeader">
          <h3>Output</h3>
          <button id="outputCopy">Copy</button>
        </div>
        <div class="textareaWrapper">
          <textarea id="textOutput" readonly></textarea>
        </div>
      </div>
    </div>
  </main>
</Layout>

<style>
  header {
    display: flex;
    flex-flow: row wrap;
    padding: 2rem 4rem;
    align-items: center;
    background: rgb(29, 36, 49);

    .title {
      display: flex;
      flex-flow: column nowrap;
      flex-grow: 1;

      h1,
      h4 {
        margin: 0;
      }
    }
  }

  main {
    padding: 4rem 6rem;

    .io {
      display: flex;
      flex-flow: row wrap;
      gap: 2rem;

      .input,
      .output {
        border: 1px solid rgb(49, 56, 72);
        border-radius: 1rem;
        min-width: 400px;
        flex-grow: 1;
        overflow: hidden;

        .ioHeader {
          padding: 1rem 1.5rem;
          background: rgb(3, 7, 23);
          display: flex;
          flex-flow: row nowrap;
          justify-content: space-between;

          button {
            padding: 0.25rem 0.5rem;
            width: 100px;
            background: rgb(29, 36, 49);
            border: 1px solid rgb(49, 56, 72);
            border-radius: 8px;
            color: rgb(74, 203, 139);
            font-size: 1rem;
          }
        }
        h3 {
          margin: 0;
        }
        .textareaWrapper {
          padding: 1rem 1.5rem;
          background: rgb(66, 74, 89);
          &:focus-within {
            box-shadow: inset 0 0 10px rgb(3, 7, 23);
          }
          & textarea:focus {
            border: none;
            outline: none;
          }
        }

        textarea {
          width: 100%;
          min-height: 800px;
          height: 100%;
          background: rgb(66, 74, 89);
          margin: 0;

          border: none;
          font-family: "Fira Code", serif;
          font-optical-sizing: auto;
          font-style: normal;
          color: rgb(168, 240, 202);

          resize: vertical;
        }
      }
    }
  }
</style>

<script>
  import { sort } from "../logic/sorting";
  import type { OutputMimeType } from "../logic/sorting";
  import { resizeObserverFn } from "../logic/resizeHandler";

  let mimeType: OutputMimeType = "text/plain";

  const inputTextArea = document.querySelector(
    "#textInput"
  )! as HTMLTextAreaElement;
  const outputTextArea = document.querySelector(
    "#textOutput"
  )! as HTMLTextAreaElement;
  const copyButton = document.querySelector(
    "#outputCopy"
  )! as HTMLButtonElement;

  copyButton.onclick = () => {
    console.log("Clicked");
    const clipboardItem = new ClipboardItem({
      [mimeType]: outputTextArea.value,
    });
    navigator.clipboard.write([clipboardItem]);
  };

  inputTextArea.addEventListener("input", (event) => {
    const value = (event.target as HTMLTextAreaElement).value;

    const { output, metadata } = sort(value, {}, { mimeType: "text/plain" });

    outputTextArea!.value = output;
    mimeType = metadata.mimeType;
  });

  const resizeOverserver = new ResizeObserver(
    resizeObserverFn(inputTextArea, outputTextArea)
  );
  resizeOverserver.observe(inputTextArea);
  resizeOverserver.observe(outputTextArea);
</script>
